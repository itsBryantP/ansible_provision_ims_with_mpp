---
# tasks file for configure-ims-bank
# TODO: account for uncataloged datasets before attempting to create/delete
- name: Configure Bank of Z 
  block: 

    # * Need this because Ansible lazily interprets role_path
    # * Results in wrong paths being sent when passing vars that use role_path var
    - set_fact:
        eager_role_path: '{{role_path}}'

    - include_role: 
        name: send-templates
      vars:
        template_path: '{{ eager_role_path }}/templates/step1/*'

    - include_role:
        name: install-zconbt
      vars:
        install_path: '{{ ZCEE_BUILD_TOOLKIT_PATH }}'
        utility_path: '{{ uss_utilities_path }}'

    - name: remove-old-app
      submit_jcl:
        name: DELETEDB.j2
        path: '{{ uss_file_path }}'
        max_rc: 8   
        reuse_script: yes
      register: response
    
    - submit_jcl:
        name: DELETEDATA.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
        max_rc: 8
    
    - include_role:
        name: git-clone-private-repo
      when: USE_GIT


    - name: Copy and extract bank sample files 
      block:

        - file:
            path: '{{ SAMPLE_FILE_DIR }}'
            state: absent

        - file:
            path: '{{ SAMPLE_FILE_DIR }}'
            state: directory

        - copy:
            src: '{{ eager_role_path }}/files/demofiles.tar'
            dest: '{{ SAMPLE_FILE_DIR }}/demofiles.tar'

        - shell: tar -Co . -xf demofiles.tar ; rm demofiles.tar
          args:
            chdir: '{{ SAMPLE_FILE_DIR }}'

        - name: Encode all template files
          shell: "for filename in $(find . -type f); do; iconv -f ISO8859-1 -t IBM-1047 ${filename} > ${filename}1; chtag -tc IBM-1047 ${filename}1; mv ${filename}1 ${filename}; done"
          args:  
            chdir: '{{ SAMPLE_FILE_DIR }}'

      when: not USE_GIT
    

    - name: Create app datasets
      submit_jcl:
        name: CREATEDATA.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'

    
    - name: execute-permission-for-copy-data
      file: 
        path: '{{ uss_file_path }}/CPTOMVS.j2'
        state: file
        mode: a+x
        
    - name: copy-uss-datasets
      shell: '{{ uss_file_path }}/CPTOMVS.j2'
    
    - name: run-dbdgen
      submit_jcl:
        name: DBDGEN.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
    
    - name: run-psbgen
      submit_jcl:
        name: PSBGEN.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
    
    - name: run-abcgen
      submit_jcl:
        name: ACBGEN.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
        max_rc: 8 
    
    - include_role:
        name: check-acblib
        
    - include_role: 
        name: send-template
      vars:
        path: '{{ eager_role_path }}/templates/step2/COPYACB.j2'

    - name: copy-acblib-to-inactive-acb
      submit_jcl:
        name: COPYACB.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
    
    - name: compile-and-link-cobol
      submit_jcl:
        name: IBCMPLNK.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
        max_rc: 4
    
    - name: compile-IBTRAN
      submit_jcl:
        name: COBOLC.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
        max_rc: 4    
    
    - name: compile-pli
      submit_jcl:
        name: PLICMLK.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
        max_rc: 4    
    
    - name: create-dynamic-alloc
      submit_jcl:
        name: DYNALLOC.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
        
    - name: load-accounts
      submit_jcl:
        name: LOADACCT.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
    
    - name: load-customer-accounts
      submit_jcl:
        name: LOADCUSA.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
    
    - name: load-customer-data
      submit_jcl:
        name: LOADCUST.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
    
    - name: load-history
      submit_jcl:
        name: LOADHIST.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
    
    - name: load-tsta
      submit_jcl:
        name: LOADTSTA.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
    
    
    
    - name: remove-old-registered-databases
      submit_jcl:
        name: DELOLDRECON.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
        max_rc: 12 
    
    - name: register-db-to-recons
      submit_jcl:
        name: RECON.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
    
    - name: define-ims-resources
      submit_jcl:
        name: SPOCJOB.j2
        path: '{{ uss_file_path }}'
        script_path: '{{ response.script_path }}'
        max_rc: 8 

    - include_role:
        name: zcee-deploy

    # TODO: Add verification that DB2 exists before continuing

    # - name: create-db2-database
    #   submit_jcl:
    #     name: CREATEDB2.j2
    #     path: '{{ uss_file_path }}'
    #     script_path: '{{ response.script_path }}'
    #     max_rc: 0
    
    # This role uses JDBC connection to load 
    # data from a csv file into a DB2 table
    # - include_role:
    #     name: load-csv-data
    
    # Another way to load data into the DB2 table 
    # Parsing data of the csv file directly in a jinja2 template
    # - name: load-db2-data
    #   submit_jcl:
    #     name: LOADDB2.j2
    #     path: '{{ uss_file_path }}'
    #     script_path: '{{ response.script_path }}'
    #     max_rc: 0 
    
    # - name: bind-db2-data
    #   submit_jcl:
    #     name: DB2BIND.j2
    #     path: '{{ uss_file_path }}'
    #     script_path: '{{ response.script_path }}'
    #     max_rc: 0 

  always:
    - name: Delete the temporary submit_jcl script path
      file:
        path: "{{ response.script_path }}"
        state: absent